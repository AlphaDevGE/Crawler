apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0'

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
    baseName = 'gs-accessing-data-mongodb'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

dependencies {
	compile 'com.google.guava:guava:18.0'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
       
    testCompile("junit:junit")
    
    //Spring Mongo
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    
    //Apache Tika
    compile('org.apache.tika:tika-parsers:1.11')
    
    //crawler4j
    compile('edu.uci.ics:crawler4j:4.2')
    
    //JSoup
    compile('org.jsoup:jsoup:1.7.2')
}

test {
    systemProperties 'property': 'value'
    testLogging.showStandardStreams = true
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

defaultTasks 'clean', 'hello'

//Spring Mongo setup
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.2.RELEASE")
    }
}

task RunMe(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'web.crawler.core.RunMe'
}

task Spider(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'web.crawler.controller.Spider'
}
